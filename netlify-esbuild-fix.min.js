const fs=require("fs"),path=require("path"),{execSync:execSync}=require("child_process"),colors={reset:"[0m",red:"[31m",green:"[32m",yellow:"[33m",blue:"[34m"};function log(message,color="reset"){console.log(`${colors[color]}${message}${colors.reset}`)}try{log("Ensuring esbuild@0.25.4 is installed...","blue"),execSync("npm install --save-exact esbuild@0.25.4",{stdio:"inherit"}),log("esbuild installation confirmed âœ“","green")}catch(error){log(`Failed to install esbuild: ${error.message}`,"red")}function searchAndPatchFiles(directory,pattern,replacementFn){if(!fs.existsSync(directory))return void log(`Directory not found: ${directory}`,"yellow");const files=fs.readdirSync(directory,{withFileTypes:!0});for(const file of files){const fullPath=path.join(directory,file.name);if(file.isDirectory())searchAndPatchFiles(fullPath,pattern,replacementFn);else if(file.name.endsWith(".js")||file.name.endsWith(".mjs"))try{const content=fs.readFileSync(fullPath,"utf-8");if(content.includes(pattern)){log(`Found esbuild check in ${fullPath}`,"yellow"),fs.writeFileSync(`${fullPath}.bak`,content);const patchedContent=replacementFn(content);fs.writeFileSync(fullPath,patchedContent),log(`Patched ${fullPath} âœ“`,"green")}}catch(error){log(`Error processing ${fullPath}: ${error.message}`,"red")}}}log("Looking for esbuild version checks in @netlify/zip-it-and-ship-it...","blue");const nodeModulesPath=path.join(process.cwd(),"node_modules");searchAndPatchFiles(path.join(nodeModulesPath,"esbuild"),"throw new Error(`Expected ${JSON.stringify(versionFromPackageJSON)}",(content=>content.replace(/throw new Error\(`Expected \${JSON\.stringify\(versionFromPackageJSON\)}[^`]+`\);/g,"console.warn(`Warning: Expected ${JSON.stringify(versionFromPackageJSON)} but got ${JSON.stringify(stdout)}, continuing anyway...`);"))),searchAndPatchFiles(path.join(nodeModulesPath,"@netlify"),"esbuild version",(content=>content.replace(/if\s*\(\s*esbuildVersion\s*!==\s*[^)]+\)\s*{[^}]*}/gs,'if (false) { console.warn("Skipping esbuild version check"); }').replace(/throw new Error\(`Expected esbuild version[^`]+`\);/g,"console.warn(`Version mismatch but continuing anyway...`);"))),log("All esbuild version checks have been patched! âœ“","green");try{log("Current esbuild version:","blue"),execSync("npx esbuild --version",{stdio:"inherit"})}catch(error){log(`Couldn't check esbuild version: ${error.message}`,"red")}