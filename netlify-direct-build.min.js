const fs=require("fs"),path=require("path"),{execSync:execSync}=require("child_process"),colors={reset:"[0m",red:"[31m",green:"[32m",yellow:"[33m",blue:"[34m",magenta:"[35m",cyan:"[36m"};function log(message,color="reset"){console.log(`${colors[color]}${message}${colors.reset}`)}function fixReactImports(){log("Starting React import fixes...","blue");const radixPath=path.join(process.cwd(),"node_modules/@radix-ui/react-icons/dist/react-icons.esm.js");if(fs.existsSync(radixPath)){log("Fixing @radix-ui/react-icons...","cyan");let content=fs.readFileSync(radixPath,"utf-8");content=content.replace("import { forwardRef, createElement } from 'react';","import React from 'react';\nconst { forwardRef, createElement } = React;"),fs.writeFileSync(radixPath,content),log("Fixed @radix-ui/react-icons âœ“","green")}else log("Could not find @radix-ui/react-icons module","yellow");["react-router","react-router-dom"].forEach((module=>{const modulePath=path.join(process.cwd(),`node_modules/${module}/dist/index.js`);if(fs.existsSync(modulePath)){log(`Fixing ${module}...`,"cyan");let content=fs.readFileSync(modulePath,"utf-8");content=content.replace(/import\s+\{\s*([^}]+)\s*\}\s+from\s+['"]react['"]/g,((match,namedImports)=>`import React from 'react';\nconst { ${namedImports} } = React;`)),fs.writeFileSync(modulePath,content),log(`Fixed ${module} âœ“`,"green")}}))}async function buildProject(){try{return fixReactImports(),log("Running TypeScript compiler...","blue"),execSync("npx tsc -b",{stdio:"inherit"}),log("TypeScript compilation completed âœ“","green"),log("Running Vite build...","blue"),execSync("npx vite build",{stdio:"inherit"}),log("Build completed successfully! âœ“","green"),!0}catch(error){return log(`Build failed: ${error.message}`,"red"),!1}}fs.existsSync(path.join(process.cwd(),"node_modules"))||(log("Installing dependencies first...","yellow"),execSync("npm install",{stdio:"inherit"})),buildProject().then((success=>{process.exit(success?0:1)}));